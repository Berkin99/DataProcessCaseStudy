
Case Study: Data Processor

Objective:
Develop a software application in C to process data from a CSV file and perform specific calculations. The program should read the input file, perform required operations, and print the results to the terminal.

---

Problem Description:
You are provided a CSV file named data.csv. This file contains information about employees in the following format:

| ID   | Name         | Age  | Department | Salary  |
|------|--------------|------|------------|---------|
| 1    | John Doe     | 34   | IT         | 70000   |
| 2    | Jane Smith   | 28   | HR         | 48000   |
| 3    | Bob Johnson  | 45   | Finance    | 120000  |
| 4    | Alice Brown  | 30   | IT         | 85000   |

Your program must process this data and calculate:
1. The total salary of all employees.
2. The average age of employees.
3. The department with the highest total salary.
4. The number of employees in each department.

---

Program Workflow:
1. Input: The program takes the CSV file as input, which must be placed in the same directory as the executable.
2. Processing:
   - Parse the CSV file to extract employee data.
   - Perform the required calculations.
3. Output: Print the results to the terminal in the following format:
   ```
   Total Salary: $323,000
   Average Age: 34.25
   Department with Highest Salary: IT ($155,000)
   Employees per Department:
       IT: 2
       HR: 1
       Finance: 1
   ```
4. Error Handling:
   - If the file is missing, print: Error: File data.csv not found.
   - If the file format is incorrect, print: Error: Invalid file format.

---

Technical Requirements:
1. Write the program in C.
2. Ensure the code builds successfully on Windows using the gcc compiler.
3. Include a build batch script (build.bat) in the repository that:
   - Compiles the code to generate an executable named DataProcessor.exe.
   - Specifies all necessary compilation flags.
4. The repository should include:
   - Source code (.c and .h files).
   - Build batch script (build.bat).
   - A sample data.csv file.
   - A README.md file with:
     - Instructions for building and running the program.
     - Sample outputs based on the provided data.

---

Evaluation Criteria:
1. Correctness: Does the program produce the correct results for the given data?
2. Code Quality: Is the code readable, modular, and well-documented?
3. Error Handling: Does the program handle missing files and incorrect formats gracefully?
4. Build Process: Does the batch script build the project without errors?
5. GitHub Repository: Is the repository well-organized with clear instructions?

---

Sample data.csv File:
```
ID,Name,Age,Department,Salary
1,John Doe,34,IT,70000
2,Jane Smith,28,HR,48000
3,Bob Johnson,45,Finance,120000
4,Alice Brown,30,IT,85000
```

---

Sample Output:
```
Total Salary: $323,000
Average Age: 34.25
Department with Highest Salary: IT ($155,000)
Employees per Department:
    IT: 2
    HR: 1
    Finance: 1
```
